---
- name: "Create inventory source from Project: {{ tower_credentials_project_name}}"
  tower_inventory_source:
    name: "{{ cluster_inventory_source_project_name }}"
    source: "{{ cluster_inventory_source_project_type }}"
    inventory: "{{ tower_inventory_name }}"
    description: "From Project: {{ tower_credentials_project_name }}"
    overwrite: "{{ cluster_inventory_source_project_overwrite }}"
    overwrite_vars: "{{ cluster_inventory_source_project_overwrite_vars }}"
    update_on_launch: "{{ cluster_inventory_source_project_update_on_launch }}"
    source_project: "{{ tower_credentials_project_name }}"
    source_path: "{{ cluster_inventory_source_project_path }}"
    state: present
    tower_verify_ssl: '{{ tower_verify_ssl }}'

- name: "Sync inventory sources"
  shell: "tower-cli inventory_source update {{ cluster_inventory_source_project_name }}"

- name: "Create the tower {{ tower_secret_organization }} organisation"
  tower_organization:
    name: "{{ tower_secret_organization }}"
    state: present
    tower_verify_ssl: '{{ tower_verify_ssl }}'

- name: "Create project: Openshift Ansible"
  tower_project:
    name: "Openshift Ansible"
    description: "Openshift Ansible"
    organization: "{{ tower_organization }}"
    state: present
    scm_type: "{{ cluster_project_bootstrap_scm_type }}"
    scm_url: "{{ cluster_project_oa_bootstrap_scm_url }}"
    scm_branch: "{{ cluster_project_oa_bootstrap_scm_branch }}"
    scm_clean: "{{ cluster_project_bootstrap_cluster_scm_clean }}"
    scm_update_on_launch: "{{ cluster_project_bootstrap_cluster_scm_update_on_launch }}"
    scm_delete_on_update: "{{ cluster_project_bootstrap_cluster_scm_delete_on_update }}"
    scm_credential: "{{ cluster_credential_bundle_github_name }}"
    tower_verify_ssl: '{{ tower_verify_ssl }}'

- name: "Create le_privatekey custom credential"
  tower_credential_type:
    name: "{{ cluster_credential_bundle_le_key_name}}"
    inputs: "{{ lookup('file', 'LE_privatekey_inputs.json') }}"
    injectors: {'extra_vars': {'le_private_key': "{{ lookup('file', 'LE_privatekey_template') }}" }}
    state: present
    kind: cloud
    tower_verify_ssl: '{{ tower_verify_ssl }}'

- name: Add Custom Credential
  command: tower-cli credential create --name "le_privatekey" --credential-type "le_privatekey" --inputs '{"le_key":"{{ letsencrypt_private_key }}"}' --organization "{{ tower_organization }}"
  ignore_errors: true

- name: Configure provision cluster job template
  tower_job_template:
    tower_host: "{{ tower_host }}"
    tower_password: "{{ tower_password }}"
    tower_username: "{{ tower_username }}"
    name: "{{ cluster_job_template_cluster_provision_name }}"
    description: "{{ cluster_job_template_cluster_provision_desc }}"
    job_type: "{{ cluster_job_template_cluster_provision_type }}"
    playbook: "{{ cluster_job_template_cluster_provision_playbook }}"
    project: "{{ cluster_job_template_cluster_provision_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    state: present
    inventory: "{{ tower_inventory_name }}"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    survey_spec: "{{ lookup('file', 'cluster_provision_survey.json') }}"
    extra_vars_path: "{{ tower_extra_vars_file_path }}"
    survey_enabled: yes
  register: cluster_create_prerequisites_out
  until: cluster_create_prerequisites_out is succeeded
  retries: 10
  delay: 5

- name: "Associate AWS credential to {{ cluster_job_template_generate_inventory_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_cluster_provision_name }}" --credential "{{ cluster_credential_bundle_aws_name }}" 

- name: "Associate le_privatekey credential to {{ cluster_job_template_generate_inventory_name }}" 
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_cluster_provision_name }}" --credential "le_privatekey" 

