---
- name: Configure generate inventory job template
  tower_job_template:
    name: "{{ cluster_job_template_generate_inventory_name }}"
    description: "{{ cluster_job_template_generate_inventory_desc }}"
    job_type: "{{ cluster_job_template_generate_inventory_type }}"
    playbook: "{{ cluster_job_template_generate_inventory_playbook }}"
    project: "{{ cluster_job_template_generate_inventory_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    state: present
    inventory: "{{ tower_inventory_name }}"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: cluster_create_generate_inventory_out
  until: cluster_create_generate_inventory_out is succeeded
  retries: 10
  delay: 5

- name: Add Custom Credential
  command: tower-cli credential create --name "le_privatekey" --credential-type "le_privatekey" --inputs '{"le_key":"{{ letsencrypt_private_key }}"}' --organization "{{ tower_organization }}"
  ignore_errors: true

- name: "Associate AWS credential to {{ cluster_job_template_generate_inventory_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_generate_inventory_name }}" --credential "{{ cluster_credential_bundle_aws_name }}"

- name: "Associate le_privatekey credential to {{ cluster_job_template_generate_inventory_name }}" 
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_generate_inventory_name }}" --credential "le_privatekey"

- name: Configure pre-flight job template
  tower_job_template:
    name: "{{ cluster_job_template_preflight_name }}"
    description: "{{ cluster_job_template_preflight_desc }}"
    job_type: "{{ cluster_job_template_preflight_type }}"
    playbook: "{{ cluster_job_template_preflight_playbook }}"
    project: "{{ cluster_job_template_preflight_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    state: present
    inventory: "{{ tower_inventory_name }}"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: cluster_create_pre_flight_out
  until: cluster_create_pre_flight_out is succeeded
  retries: 10
  delay: 5

- name: "Associate AWS credential to {{ cluster_job_template_preflight_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_preflight_name }}" --credential "{{ cluster_credential_bundle_aws_name }}"

- name: "Associate {{ cluster_job_template_preflight_credentials }} credential to {{ cluster_job_template_preflight_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_preflight_name }}" --credential "{{ cluster_job_template_preflight_credentials }}"

- name: Configure prerequisites job template
  tower_job_template:
    name: "{{ cluster_job_template_prerequisites_name }}"
    description: "{{ cluster_job_template_prerequisites_desc }}"
    job_type: "{{ cluster_job_template_prerequisites_type }}"
    playbook: "{{ cluster_job_template_prerequisites_playbook }}"
    project: "{{ cluster_job_template_prerequisites_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    state: present
    inventory: "Provisioning_inventory"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: cluster_create_prerequisites_out
  until: cluster_create_prerequisites_out is succeeded
  retries: 10
  delay: 5

- name: "Associate {{ cluster_job_template_prerequisites_credentials }} credential to {{ cluster_job_template_prerequisites_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_prerequisites_name }}" --credential "{{ cluster_job_template_prerequisites_credentials }}"

- name: Configure provision install job template
  tower_job_template:
    name: "{{ cluster_job_template_install_name }}"
    description: "{{ cluster_job_template_install_desc }}"
    job_type: "{{ cluster_job_template_install_type }}"
    playbook: "{{ cluster_job_template_install_playbook }}"
    project: "{{ cluster_job_template_install_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    state: present
    inventory: "Provisioning_inventory"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: cluster_create_provision_install_out
  until: cluster_create_provision_install_out is succeeded
  retries: 10
  delay: 5

- name: "Associate {{ cluster_credential_bundle_aws_name }} credentials {{ cluster_job_template_install_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_install_name }}" --credential "{{ cluster_credential_bundle_aws_name }}"

- name: "Associate {{ cluster_job_template_install_credentials }} credential to {{ cluster_job_template_install_name }}"
  shell: tower-cli job_template associate_credential --job-template "{{ cluster_job_template_install_name }}" --credential "{{ cluster_job_template_install_credentials }}"
- name: Configure post-install job template
  tower_job_template:
    name: "{{ cluster_job_template_post_install_name }}"
    description: "{{ cluster_job_template_post_install_desc }}"
    job_type: "{{ cluster_job_template_post_install_type }}"
    playbook: "{{ cluster_job_template_post_install_playbook }}"
    project: "{{ cluster_job_template_post_install_project }}"
    credential: "{{ tower_credential_bundle_default_name }}"
    vault_credential: "{{ tower_credential_bundle_vault_name }}"
    state: present
    inventory: "Provisioning_inventory"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: cluster_create_post_install_out
  until: cluster_create_post_install_out is succeeded
  retries: 10
  delay: 5

- name: "Create workflow: {{ cluster_workflow_job_template_name }}"
  tower_workflow_template:
    name:  "{{ cluster_workflow_job_template_name }}"
    description: "{{ cluster_workflow_job_template_desc }}"
    state: present
    organization: "{{ tower_organization }}"
    tower_verify_ssl: '{{ tower_verify_ssl }}'
  register: create_workflow_response

- name: Create workflow schema
  template:
    src: workflow_schema.yml.j2
    dest: "cluster_workflow_schema.yml"

- name: Retrieve AWS Credential Type ID
  shell: "tower-cli credential_type list --kind cloud -n \"Amazon Web Services\" -f id"
  register: aws_cred_type_id

- name: Retrieve list of AWS Credential Bundles
  shell: "tower-cli credential list --credential-type {{ aws_cred_type_id.stdout }} -f json"
  register: aws_credentials_raw

- set_fact:
    aws_credentials_json: "{{ aws_credentials_raw.stdout | from_json }}"
    cluster_aws_accounts: []

- name: "Set list of AWS Accounts"
  set_fact:
    cluster_aws_accounts: "{{ cluster_aws_accounts + [ item.name ] }}"
  with_items: "{{ aws_credentials_json.results }}"
  no_log: true

- set_fact:
    cluster_install_survey_aws_accounts: "{{ cluster_aws_accounts | join('\\n')}}"

- name: "Update Workflow job template with survey"
  shell: "tower-cli workflow modify --name=\"{{ cluster_workflow_job_template_name }}\" --survey-enabled=true --survey-spec='@{{ role_path }}/templates/workflow_survey.json' --extra-vars='@{{ tower_extra_vars_file_path }}'"

- name: "Update Workflow job template with schema"
  shell: "tower-cli workflow schema \"{{ cluster_workflow_job_template_name }}\" @cluster_workflow_schema.yml"

# Update the workflow to enable ask_variables_on_launch via the tower api
- include_role:
    name: tower
    tasks_from: enable_ask_variables_on_launch.yml
  vars:
    workflow_id: "{{ create_workflow_response.id }}"

- name: Clean up files
  file:
    path: cluster_workflow_schema.yml
    state: absent